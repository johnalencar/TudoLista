
import { PlusCircle } from '@phosphor-icons/react'
import styles from './App.module.css'
import { Button, Input, Empty, Item, Header } from './components'
import { useState } from 'react'

export interface ITask {
  id: number
  text: string
  isChecked: boolean
}

const listaDeTarefas: ITask[] = [
  {
    id: 1,
    text: 'Estudar React',
    isChecked: false,
  },
  {
    id: 2,
    text: 'Estudar TypeScript',
    isChecked: false,
  },
  {
    id: 3,
    text: 'Estudar CSS',
    isChecked: false,
  },
];

export function App() {
  const [tasks, setTasks] = useState<ITask[]>(listaDeTarefas);
  const [newTaskText, setNewTaskText] = useState('');

  function handleNewAddTask() {
    if (newTaskText.trim() === '') return; // Não adiciona tarefas vazias

    const newTask: ITask = {
      id: tasks.length + 1, // Gera um novo ID
      text: newTaskText,
      isChecked: false,
    };

    setTasks([...tasks, newTask]);
    setNewTaskText(''); // Limpa o input após adicionar a tarefa
  }

  return (
    <main>
      <Header />

      <section className={styles.content}>
        <div className={styles.taskInfoContainer}>
          <Input
            onChange={(e) => setNewTaskText(e.target.value)}
            value={newTaskText}
          />
          <Button onClick={handleNewAddTask}>
            Criar
            <PlusCircle size={16} color="#f2f2f2" weight="bold" />
          </Button>
        </div>

        <div className={styles.tasksList}>
          {tasks.length > 0 ? (
            <div>
              {tasks.map((task) => {
                return (
                  <Item
                    key={task.id}
                    data={task}
                    removeTask={() => {}}
                    toggleTaskStatus={() => {}}
                  />
                )
              })}
            </div>
          ) : (
            <Empty />
          )}
        </div>
      </section>
    </main>
  )
}

branch -> aula03/hooks-useState